<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/BKCameraController.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/BKCameraController</TokenIdentifier>
			<Abstract type="html">A wrapper for AVCaptureSession to simplify the process of capturing photos.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
            
			
			<NodeRef refid="1"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BKCameraController/setDelegate:</TokenIdentifier>
			<Abstract type="html">The receiver’s delegate or nil if it doesn’t have a delegate.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;BKCameraControllerDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BKCameraController/delegate</TokenIdentifier>
			<Abstract type="html">The receiver’s delegate or nil if it doesn’t have a delegate.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;BKCameraControllerDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BKCameraController/delegate</TokenIdentifier>
			<Abstract type="html">The receiver’s delegate or nil if it doesn’t have a delegate.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;BKCameraControllerDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BKCameraController/setSession:</TokenIdentifier>
			<Abstract type="html">The controller-owned AVCaptureSession instance.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AVCaptureSession *session</Declaration>
			
			
			<Anchor>//api/name/session</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BKCameraController/session</TokenIdentifier>
			<Abstract type="html">The controller-owned AVCaptureSession instance.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AVCaptureSession *session</Declaration>
			
			
			<Anchor>//api/name/session</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BKCameraController/session</TokenIdentifier>
			<Abstract type="html">The controller-owned AVCaptureSession instance.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) AVCaptureSession *session</Declaration>
			
			
			<Anchor>//api/name/session</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BKCameraController/setPosition:</TokenIdentifier>
			<Abstract type="html">The current camera position.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) AVCaptureDevicePosition position</Declaration>
			
			
			<Anchor>//api/name/position</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BKCameraController/position</TokenIdentifier>
			<Abstract type="html">The current camera position.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) AVCaptureDevicePosition position</Declaration>
			
			
			<Anchor>//api/name/position</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BKCameraController/position</TokenIdentifier>
			<Abstract type="html">The current camera position.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) AVCaptureDevicePosition position</Declaration>
			
			
			<Anchor>//api/name/position</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BKCameraController/setFlashMode:</TokenIdentifier>
			<Abstract type="html">The current camera flash mode.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) AVCaptureFlashMode flashMode</Declaration>
			
			
			<Anchor>//api/name/flashMode</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BKCameraController/flashMode</TokenIdentifier>
			<Abstract type="html">The current camera flash mode.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) AVCaptureFlashMode flashMode</Declaration>
			
			
			<Anchor>//api/name/flashMode</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BKCameraController/flashMode</TokenIdentifier>
			<Abstract type="html">The current camera flash mode.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) AVCaptureFlashMode flashMode</Declaration>
			
			
			<Anchor>//api/name/flashMode</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BKCameraController/setFlashCapable:</TokenIdentifier>
			<Abstract type="html">Whether the current camera has the capability to flash.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) BOOL flashCapable</Declaration>
			
			
			<Anchor>//api/name/flashCapable</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BKCameraController/flashCapable</TokenIdentifier>
			<Abstract type="html">Whether the current camera has the capability to flash.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) BOOL flashCapable</Declaration>
			
			
			<Anchor>//api/name/flashCapable</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BKCameraController/flashCapable</TokenIdentifier>
			<Abstract type="html">Whether the current camera has the capability to flash.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign, readonly) BOOL flashCapable</Declaration>
			
			
			<Anchor>//api/name/flashCapable</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BKCameraController/initWithInitialPosition:autoFlashEnabled:</TokenIdentifier>
			<Abstract type="html">Initializes the camera controller using the specified starting parameters.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>- (instancetype)initWithInitialPosition:(id)position autoFlashEnabled:(id)enabled</Declaration>
			<Parameters>
				<Parameter>
					<Name>position</Name>
					<Abstract type="html">The position used to select the initial capture device used by the camera controller. Defaults to AVCaptureDevicePositionBack.</Abstract>
				</Parameter><Parameter>
					<Name>enabled</Name>
					<Abstract type="html">YES if the camera controller should include AVCaptureFlashModeAuto when cycling the flash mode. Defaults to NO.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An initialized BKCameraController instance.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithInitialPosition:autoFlashEnabled:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BKCameraController/startCaptureSession</TokenIdentifier>
			<Abstract type="html">Tells the receiver to start the capture session.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>- (void)startCaptureSession</Declaration>
			
			
			<Anchor>//api/name/startCaptureSession</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BKCameraController/stopCaptureSession</TokenIdentifier>
			<Abstract type="html">Tells the receiver to stop the capture session.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>- (void)stopCaptureSession</Declaration>
			
			
			<Anchor>//api/name/stopCaptureSession</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BKCameraController/autoAdjustCameraToPoint:</TokenIdentifier>
			<Abstract type="html">Sets the focus and exposure point to the specified point, if supported.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>- (void)autoAdjustCameraToPoint:(id)point</Declaration>
			<Parameters>
				<Parameter>
					<Name>point</Name>
					<Abstract type="html">The point to set the exposure and focus.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/autoAdjustCameraToPoint:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BKCameraController/cycleFlashMode</TokenIdentifier>
			<Abstract type="html">Cycles through supported flash modes. Skips AVCaptureFlashModeAuto if the receiver was initialized with autoFlashEnabled set to NO.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>- (void)cycleFlashMode</Declaration>
			
			
			<Anchor>//api/name/cycleFlashMode</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BKCameraController/cyclePosition</TokenIdentifier>
			<Abstract type="html">Cycles through supported flash modes. If no flash mode at all is supported (such as on the front-facing camera), flashCapable is set to NO, otherwise YES.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>- (void)cyclePosition</Declaration>
			
			
			<Anchor>//api/name/cyclePosition</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BKCameraController/captureAssetWithCompletion:</TokenIdentifier>
			<Abstract type="html">Capture a photo and save it, along with its EXIF metadata, to the camera roll.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>- (void)captureAssetWithCompletion:(id)completion</Declaration>
			<Parameters>
				<Parameter>
					<Name>completion</Name>
					<Abstract type="html">A completion block supplying either a valid Asset &lt;NSURL&gt; or a &lt;NSError&gt;. Executed on the main thread.

- assetURL The Asset URL to the captured media. nil if an error occurred.
- error The error, if a problem occurred during capture.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/captureAssetWithCompletion:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BKCameraController/captureSampleWithCompletion:</TokenIdentifier>
			<Abstract type="html">Capture a photo.</Abstract>
			<DeclaredIn>BKCameraController.h</DeclaredIn>
			
			<Declaration>- (void)captureSampleWithCompletion:(id)completion</Declaration>
			<Parameters>
				<Parameter>
					<Name>completion</Name>
					<Abstract type="html">A completion block supplying either a &lt;CIImage&gt; or a &lt;NSError&gt;. Executed on the main thread.

- image A CIImage wrapping the sample buffer&apos;s pixel buffer, captured by the camera. nil if an error occurred.
- error The error, if a problem occurred during capture.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/captureSampleWithCompletion:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/BKCameraController/fakeImageData</TokenIdentifier>
			<Abstract type="html">Getter for the fake image data used by the simulator.</Abstract>
			<DeclaredIn>BKCameraController+Simulator.h</DeclaredIn>
			
			<Declaration>+ (NSData *)fakeImageData</Declaration>
			
			<ReturnValue><Abstract type="html">The fake image data used by the simulator.</Abstract></ReturnValue>
			<Anchor>//api/name/fakeImageData</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/BKCameraController/setFakeImageData:</TokenIdentifier>
			<Abstract type="html">Setter for the fake image data used by the simulator</Abstract>
			<DeclaredIn>BKCameraController+Simulator.h</DeclaredIn>
			
			<Declaration>+ (void)setFakeImageData:(id)fakeImageData</Declaration>
			<Parameters>
				<Parameter>
					<Name>fakeImageData</Name>
					<Abstract type="html">The fake image data to be used by the simulator.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setFakeImageData:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
        
        
	</File>
</Tokens>